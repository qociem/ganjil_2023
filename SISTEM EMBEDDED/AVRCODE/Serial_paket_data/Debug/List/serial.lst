
AVRASM ver. 2.1.30  D:\KOSIM\UNLA\SISTEM EMBEDDED\AVRCODE\Serial_paket_data\Debug\List\serial.asm Sat Dec 02 08:29:52 2023

                 
                 
                 ;CodeVisionAVR C Compiler V3.52 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega168P
                 ;Program type           : Application
                 ;Clock frequency        : 1,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 1
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega168P
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x04FF
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004a 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000034 2710
000035 03e8
000036 0064
000037 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000038 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000039 1000
00003a 0100
00003b 0010
00003c 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00003d 3041
00003e 3130
00003f 3042
000040 3230      	.DB  0x41,0x30,0x30,0x31,0x42,0x30,0x30,0x32
000041 3043
000042 3330
000043 4100
000044 3030      	.DB  0x43,0x30,0x30,0x33,0x0,0x41,0x30,0x30
000045 4234
000046 3030
000047 4335
000048 3030      	.DB  0x34,0x42,0x30,0x30,0x35,0x43,0x30,0x30
000049 0036      	.DB  0x36,0x0
                 __RESET:
00004a 94f8      	CLI
00004b 27ee      	CLR  R30
00004c bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004d e0f1      	LDI  R31,1
00004e bff5      	OUT  MCUCR,R31
00004f bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000050 e08d      	LDI  R24,(14-2)+1
000051 e0a2      	LDI  R26,2
000052 27bb      	CLR  R27
                 __CLEAR_REG:
000053 93ed      	ST   X+,R30
000054 958a      	DEC  R24
000055 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000056 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000057 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000058 e0a0      	LDI  R26,LOW(__SRAM_START)
000059 e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00005a 93ed      	ST   X+,R30
00005b 9701      	SBIW R24,1
00005c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GPIOR0 INITIALIZATION
00005d e0e0      	LDI  R30,__GPIOR0_INIT
00005e bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00005f efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000060 bfed      	OUT  SPL,R30
000061 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000062 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000063 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000064 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000065 940c 0067 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x200
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;void main(void)
                 ; 0000 0021 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0022 // Declare your local variables here
                 ; 0000 0023 
                 ; 0000 0024 // Crystal Oscillator division factor: 1
                 ; 0000 0025 #pragma optsize-
                 ; 0000 0026 CLKPR=(1<<CLKPCE);
000067 e8e0      	LDI  R30,LOW(128)
000068 93e0 0061 	STS  97,R30
                 ; 0000 0027 CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
00006a e0e0      	LDI  R30,LOW(0)
00006b 93e0 0061 	STS  97,R30
                 ; 0000 0028 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 0029 #pragma optsize+
                 ; 0000 002A #endif
                 ; 0000 002B 
                 ; 0000 002C // Input/Output Ports initialization
                 ; 0000 002D // Port B initialization
                 ; 0000 002E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=Out
                 ; 0000 002F DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (1<<DDB0);
00006d e0e1      	LDI  R30,LOW(1)
00006e b9e4      	OUT  0x4,R30
                 ; 0000 0030 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=0
                 ; 0000 0031 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00006f e0e0      	LDI  R30,LOW(0)
000070 b9e5      	OUT  0x5,R30
                 ; 0000 0032 
                 ; 0000 0033 // Port C initialization
                 ; 0000 0034 // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0035 DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000071 b9e7      	OUT  0x7,R30
                 ; 0000 0036 // State: Bit6=T Bit5=P Bit4=P Bit3=P Bit2=T Bit1=T Bit0=T
                 ; 0000 0037 PORTC=(0<<PORTC6) | (1<<PORTC5) | (1<<PORTC4) | (1<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000072 e3e8      	LDI  R30,LOW(56)
000073 b9e8      	OUT  0x8,R30
                 ; 0000 0038 
                 ; 0000 0039 // Port D initialization
                 ; 0000 003A // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 003B DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000074 e0e0      	LDI  R30,LOW(0)
000075 b9ea      	OUT  0xA,R30
                 ; 0000 003C // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 003D PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000076 b9eb      	OUT  0xB,R30
                 ; 0000 003E 
                 ; 0000 003F // Timer/Counter 0 initialization
                 ; 0000 0040 // Clock source: System Clock
                 ; 0000 0041 // Clock value: Timer 0 Stopped
                 ; 0000 0042 // Mode: Normal top=0xFF
                 ; 0000 0043 // OC0A output: Disconnected
                 ; 0000 0044 // OC0B output: Disconnected
                 ; 0000 0045 TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
000077 bde4      	OUT  0x24,R30
                 ; 0000 0046 TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000078 bde5      	OUT  0x25,R30
                 ; 0000 0047 TCNT0=0x00;
000079 bde6      	OUT  0x26,R30
                 ; 0000 0048 OCR0A=0x00;
00007a bde7      	OUT  0x27,R30
                 ; 0000 0049 OCR0B=0x00;
00007b bde8      	OUT  0x28,R30
                 ; 0000 004A 
                 ; 0000 004B // Timer/Counter 1 initialization
                 ; 0000 004C // Clock source: System Clock
                 ; 0000 004D // Clock value: Timer1 Stopped
                 ; 0000 004E // Mode: Normal top=0xFFFF
                 ; 0000 004F // OC1A output: Disconnected
                 ; 0000 0050 // OC1B output: Disconnected
                 ; 0000 0051 // Noise Canceler: Off
                 ; 0000 0052 // Input Capture on Falling Edge
                 ; 0000 0053 // Timer1 Overflow Interrupt: Off
                 ; 0000 0054 // Input Capture Interrupt: Off
                 ; 0000 0055 // Compare A Match Interrupt: Off
                 ; 0000 0056 // Compare B Match Interrupt: Off
                 ; 0000 0057 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
00007c 93e0 0080 	STS  128,R30
                 ; 0000 0058 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
00007e 93e0 0081 	STS  129,R30
                 ; 0000 0059 TCNT1H=0x00;
000080 93e0 0085 	STS  133,R30
                 ; 0000 005A TCNT1L=0x00;
000082 93e0 0084 	STS  132,R30
                 ; 0000 005B ICR1H=0x00;
000084 93e0 0087 	STS  135,R30
                 ; 0000 005C ICR1L=0x00;
000086 93e0 0086 	STS  134,R30
                 ; 0000 005D OCR1AH=0x00;
000088 93e0 0089 	STS  137,R30
                 ; 0000 005E OCR1AL=0x00;
00008a 93e0 0088 	STS  136,R30
                 ; 0000 005F OCR1BH=0x00;
00008c 93e0 008b 	STS  139,R30
                 ; 0000 0060 OCR1BL=0x00;
00008e 93e0 008a 	STS  138,R30
                 ; 0000 0061 
                 ; 0000 0062 // Timer/Counter 2 initialization
                 ; 0000 0063 // Clock source: System Clock
                 ; 0000 0064 // Clock value: Timer2 Stopped
                 ; 0000 0065 // Mode: Normal top=0xFF
                 ; 0000 0066 // OC2A output: Disconnected
                 ; 0000 0067 // OC2B output: Disconnected
                 ; 0000 0068 ASSR=(0<<EXCLK) | (0<<AS2);
000090 93e0 00b6 	STS  182,R30
                 ; 0000 0069 TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
000092 93e0 00b0 	STS  176,R30
                 ; 0000 006A TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);
000094 93e0 00b1 	STS  177,R30
                 ; 0000 006B TCNT2=0x00;
000096 93e0 00b2 	STS  178,R30
                 ; 0000 006C OCR2A=0x00;
000098 93e0 00b3 	STS  179,R30
                 ; 0000 006D OCR2B=0x00;
00009a 93e0 00b4 	STS  180,R30
                 ; 0000 006E 
                 ; 0000 006F // Timer/Counter 0 Interrupt(s) initialization
                 ; 0000 0070 TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
00009c 93e0 006e 	STS  110,R30
                 ; 0000 0071 
                 ; 0000 0072 // Timer/Counter 1 Interrupt(s) initialization
                 ; 0000 0073 TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
00009e 93e0 006f 	STS  111,R30
                 ; 0000 0074 
                 ; 0000 0075 // Timer/Counter 2 Interrupt(s) initialization
                 ; 0000 0076 TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
0000a0 93e0 0070 	STS  112,R30
                 ; 0000 0077 
                 ; 0000 0078 // External Interrupt(s) initialization
                 ; 0000 0079 // INT0: Off
                 ; 0000 007A // INT1: Off
                 ; 0000 007B // Interrupt on any change on pins PCINT0-7: Off
                 ; 0000 007C // Interrupt on any change on pins PCINT8-14: Off
                 ; 0000 007D // Interrupt on any change on pins PCINT16-23: Off
                 ; 0000 007E EICRA=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0000a2 93e0 0069 	STS  105,R30
                 ; 0000 007F EIMSK=(0<<INT1) | (0<<INT0);
0000a4 bbed      	OUT  0x1D,R30
                 ; 0000 0080 PCICR=(0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
0000a5 93e0 0068 	STS  104,R30
                 ; 0000 0081 
                 ; 0000 0082 // USART initialization
                 ; 0000 0083 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0084 // USART Receiver: On
                 ; 0000 0085 // USART Transmitter: On
                 ; 0000 0086 // USART0 Mode: Asynchronous
                 ; 0000 0087 // USART Baud Rate: 4800
                 ; 0000 0088 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
0000a7 93e0 00c0 	STS  192,R30
                 ; 0000 0089 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
0000a9 e1e8      	LDI  R30,LOW(24)
0000aa 93e0 00c1 	STS  193,R30
                 ; 0000 008A UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
0000ac e0e6      	LDI  R30,LOW(6)
0000ad 93e0 00c2 	STS  194,R30
                 ; 0000 008B UBRR0H=0x00;
0000af e0e0      	LDI  R30,LOW(0)
0000b0 93e0 00c5 	STS  197,R30
                 ; 0000 008C UBRR0L=0x0C;
0000b2 e0ec      	LDI  R30,LOW(12)
0000b3 93e0 00c4 	STS  196,R30
                 ; 0000 008D 
                 ; 0000 008E // Analog Comparator initialization
                 ; 0000 008F // Analog Comparator: Off
                 ; 0000 0090 // The Analog Comparator's positive input is
                 ; 0000 0091 // connected to the AIN0 pin
                 ; 0000 0092 // The Analog Comparator's negative input is
                 ; 0000 0093 // connected to the AIN1 pin
                 ; 0000 0094 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000b5 e8e0      	LDI  R30,LOW(128)
0000b6 bfe0      	OUT  0x30,R30
                 ; 0000 0095 ADCSRB=(0<<ACME);
0000b7 e0e0      	LDI  R30,LOW(0)
0000b8 93e0 007b 	STS  123,R30
                 ; 0000 0096 // Digital input buffer on AIN0: On
                 ; 0000 0097 // Digital input buffer on AIN1: On
                 ; 0000 0098 DIDR1=(0<<AIN0D) | (0<<AIN1D);
0000ba 93e0 007f 	STS  127,R30
                 ; 0000 0099 
                 ; 0000 009A // ADC initialization
                 ; 0000 009B // ADC disabled
                 ; 0000 009C ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0000bc 93e0 007a 	STS  122,R30
                 ; 0000 009D 
                 ; 0000 009E // SPI initialization
                 ; 0000 009F // SPI disabled
                 ; 0000 00A0 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000be bdec      	OUT  0x2C,R30
                 ; 0000 00A1 
                 ; 0000 00A2 // TWI initialization
                 ; 0000 00A3 // TWI disabled
                 ; 0000 00A4 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000bf 93e0 00bc 	STS  188,R30
                 ; 0000 00A5 
                 ; 0000 00A6 while (1)
                 _0x3:
                 ; 0000 00A7 {
                 ; 0000 00A8 // Place your code here
                 ; 0000 00A9 printf("A001B002C003");
                +
0000c1 e7ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000c2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000c3 d184      	RCALL SUBOPT_0x0
                 ; 0000 00AA delay_ms(500);
                 ; 0000 00AB printf("A004B005C006");
                +
0000c4 e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 13 ) )
0000c5 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW1FN _0x0,13
0000c6 d181      	RCALL SUBOPT_0x0
                 ; 0000 00AC delay_ms(500);
                 ; 0000 00AD 
                 ; 0000 00AE 
                 ; 0000 00AF }
0000c7 cff9      	RJMP _0x3
                 ; 0000 00B0 }
                 _0x6:
0000c8 cfff      	RJMP _0x6
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0000c9 93aa      	ST   -Y,R26
                 _0x2000006:
0000ca 91e0 00c0 	LDS  R30,192
0000cc 72e0      	ANDI R30,LOW(0x20)
0000cd f3e1      	BREQ _0x2000006
0000ce 81e8      	LD   R30,Y
0000cf 93e0 00c6 	STS  198,R30
0000d1 9621      	ADIW R28,1
0000d2 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0000d3 93ba      	ST   -Y,R27
0000d4 93aa      	ST   -Y,R26
0000d5 81aa      	LDD  R26,Y+2
0000d6 dff2      	RCALL _putchar
0000d7 81a8      	LD   R26,Y
0000d8 81b9      	LDD  R27,Y+1
0000d9 91ed      	LD   R30,X+
0000da 91fd      	LD   R31,X+
0000db 9631      	ADIW R30,1
0000dc 93fe      	ST   -X,R31
0000dd 93ee      	ST   -X,R30
0000de 9623      	ADIW R28,3
0000df 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
0000e0 93ba      	ST   -Y,R27
0000e1 93aa      	ST   -Y,R26
0000e2 9726      	SBIW R28,6
0000e3 d189      	RCALL __SAVELOCR6
0000e4 e010      	LDI  R17,0
0000e5 85ac      	LDD  R26,Y+12
0000e6 85bd      	LDD  R27,Y+12+1
0000e7 e0e0      	LDI  R30,LOW(0)
0000e8 e0f0      	LDI  R31,HIGH(0)
0000e9 93ed      	ST   X+,R30
0000ea 93fc      	ST   X,R31
                 _0x200001C:
0000eb 89ea      	LDD  R30,Y+18
0000ec 89fb      	LDD  R31,Y+18+1
0000ed 9631      	ADIW R30,1
0000ee 8bea      	STD  Y+18,R30
0000ef 8bfb      	STD  Y+18+1,R31
0000f0 9731      	SBIW R30,1
0000f1 91e4      	LPM  R30,Z
0000f2 2f2e      	MOV  R18,R30
0000f3 30e0      	CPI  R30,0
0000f4 f409      	BRNE PC+2
0000f5 c10b      	RJMP _0x200001E
0000f6 2fe1      	MOV  R30,R17
0000f7 30e0      	CPI  R30,0
0000f8 f431      	BRNE _0x2000022
0000f9 3225      	CPI  R18,37
0000fa f411      	BRNE _0x2000023
0000fb e011      	LDI  R17,LOW(1)
0000fc c001      	RJMP _0x2000024
                 _0x2000023:
0000fd d152      	RCALL SUBOPT_0x1
                 _0x2000024:
0000fe c101      	RJMP _0x2000021
                 _0x2000022:
0000ff 30e1      	CPI  R30,LOW(0x1)
000100 f4a1      	BRNE _0x2000025
000101 3225      	CPI  R18,37
000102 f411      	BRNE _0x2000026
000103 d14c      	RCALL SUBOPT_0x1
000104 c0fa      	RJMP _0x20000D2
                 _0x2000026:
000105 e012      	LDI  R17,LOW(2)
000106 e040      	LDI  R20,LOW(0)
000107 e000      	LDI  R16,LOW(0)
000108 322d      	CPI  R18,45
000109 f411      	BRNE _0x2000027
00010a e001      	LDI  R16,LOW(1)
00010b c0f4      	RJMP _0x2000021
                 _0x2000027:
00010c 322b      	CPI  R18,43
00010d f411      	BRNE _0x2000028
00010e e24b      	LDI  R20,LOW(43)
00010f c0f0      	RJMP _0x2000021
                 _0x2000028:
000110 3220      	CPI  R18,32
000111 f411      	BRNE _0x2000029
000112 e240      	LDI  R20,LOW(32)
000113 c0ec      	RJMP _0x2000021
                 _0x2000029:
000114 c002      	RJMP _0x200002A
                 _0x2000025:
000115 30e2      	CPI  R30,LOW(0x2)
000116 f439      	BRNE _0x200002B
                 _0x200002A:
000117 e050      	LDI  R21,LOW(0)
000118 e013      	LDI  R17,LOW(3)
000119 3320      	CPI  R18,48
00011a f411      	BRNE _0x200002C
00011b 6800      	ORI  R16,LOW(128)
00011c c0e3      	RJMP _0x2000021
                 _0x200002C:
00011d c003      	RJMP _0x200002D
                 _0x200002B:
00011e 30e3      	CPI  R30,LOW(0x3)
00011f f009      	BREQ PC+2
000120 c0df      	RJMP _0x2000021
                 _0x200002D:
000121 3320      	CPI  R18,48
000122 f010      	BRLO _0x2000030
000123 332a      	CPI  R18,58
000124 f008      	BRLO _0x2000031
                 _0x2000030:
000125 c007      	RJMP _0x200002F
                 _0x2000031:
000126 e0aa      	LDI  R26,LOW(10)
000127 9f5a      	MUL  R21,R26
000128 2d50      	MOV  R21,R0
000129 2fe2      	MOV  R30,R18
00012a 53e0      	SUBI R30,LOW(48)
00012b 0f5e      	ADD  R21,R30
00012c c0d3      	RJMP _0x2000021
                 _0x200002F:
00012d 2fe2      	MOV  R30,R18
00012e 36e3      	CPI  R30,LOW(0x63)
00012f f439      	BRNE _0x2000035
000130 d126      	RCALL SUBOPT_0x2
000131 89e8      	LDD  R30,Y+16
000132 89f9      	LDD  R31,Y+16+1
000133 81a4      	LDD  R26,Z+4
000134 93aa      	ST   -Y,R26
000135 d127      	RCALL SUBOPT_0x3
000136 c0c8      	RJMP _0x2000036
                 _0x2000035:
000137 37e3      	CPI  R30,LOW(0x73)
000138 f429      	BRNE _0x2000038
000139 d11d      	RCALL SUBOPT_0x2
00013a d128      	RCALL SUBOPT_0x4
00013b d0f3      	RCALL _strlen
00013c 2f1e      	MOV  R17,R30
00013d c007      	RJMP _0x2000039
                 _0x2000038:
00013e 37e0      	CPI  R30,LOW(0x70)
00013f f449      	BRNE _0x200003B
000140 d116      	RCALL SUBOPT_0x2
000141 d121      	RCALL SUBOPT_0x4
000142 d0f8      	RCALL _strlenf
000143 2f1e      	MOV  R17,R30
000144 6008      	ORI  R16,LOW(8)
                 _0x2000039:
000145 6002      	ORI  R16,LOW(2)
000146 770f      	ANDI R16,LOW(127)
000147 e030      	LDI  R19,LOW(0)
000148 c03a      	RJMP _0x200003C
                 _0x200003B:
000149 36e4      	CPI  R30,LOW(0x64)
00014a f011      	BREQ _0x200003F
00014b 36e9      	CPI  R30,LOW(0x69)
00014c f411      	BRNE _0x2000040
                 _0x200003F:
00014d 6004      	ORI  R16,LOW(4)
00014e c002      	RJMP _0x2000041
                 _0x2000040:
00014f 37e5      	CPI  R30,LOW(0x75)
000150 f431      	BRNE _0x2000042
                 _0x2000041:
000151 e6e8      	LDI  R30,LOW(_tbl10_G100*2)
000152 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000153 83ee      	STD  Y+6,R30
000154 83ff      	STD  Y+6+1,R31
000155 e015      	LDI  R17,LOW(5)
000156 c00c      	RJMP _0x2000043
                 _0x2000042:
000157 35e8      	CPI  R30,LOW(0x58)
000158 f411      	BRNE _0x2000045
000159 6008      	ORI  R16,LOW(8)
00015a c003      	RJMP _0x2000046
                 _0x2000045:
00015b 37e8      	CPI  R30,LOW(0x78)
00015c f009      	BREQ PC+2
00015d c0a1      	RJMP _0x2000077
                 _0x2000046:
00015e e7e2      	LDI  R30,LOW(_tbl16_G100*2)
00015f e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000160 83ee      	STD  Y+6,R30
000161 83ff      	STD  Y+6+1,R31
000162 e014      	LDI  R17,LOW(4)
                 _0x2000043:
000163 ff02      	SBRS R16,2
000164 c015      	RJMP _0x2000048
000165 d0f1      	RCALL SUBOPT_0x2
000166 89a8      	LDD  R26,Y+16
000167 89b9      	LDD  R27,Y+16+1
000168 9614      	ADIW R26,4
000169 91ed      	LD   R30,X+
00016a 91fd      	LD   R31,X+
00016b 87ea      	STD  Y+10,R30
00016c 87fb      	STD  Y+10+1,R31
00016d 85ab      	LDD  R26,Y+11
00016e 23aa      	TST  R26
00016f f422      	BRPL _0x2000049
000170 d10a      	RCALL __ANEGW1
000171 87ea      	STD  Y+10,R30
000172 87fb      	STD  Y+10+1,R31
000173 e24d      	LDI  R20,LOW(45)
                 _0x2000049:
000174 3040      	CPI  R20,0
000175 f011      	BREQ _0x200004A
000176 5f1f      	SUBI R17,-LOW(1)
000177 c001      	RJMP _0x200004B
                 _0x200004A:
000178 7f0b      	ANDI R16,LOW(251)
                 _0x200004B:
000179 c009      	RJMP _0x200004C
                 _0x2000048:
00017a d0dc      	RCALL SUBOPT_0x2
00017b 89a8      	LDD  R26,Y+16
00017c 89b9      	LDD  R27,Y+16+1
00017d 9614      	ADIW R26,4
                +
00017e 91ed     +LD R30 , X +
00017f 91fc     +LD R31 , X
000180 9711     +SBIW R26 , 1
                 	__GETW1P
000181 87ea      	STD  Y+10,R30
000182 87fb      	STD  Y+10+1,R31
                 _0x200004C:
                 _0x200003C:
000183 fd00      	SBRC R16,0
000184 c010      	RJMP _0x200004D
                 _0x200004E:
000185 1715      	CP   R17,R21
000186 f470      	BRSH _0x2000050
000187 ff07      	SBRS R16,7
000188 c008      	RJMP _0x2000051
000189 ff02      	SBRS R16,2
00018a c004      	RJMP _0x2000052
00018b 7f0b      	ANDI R16,LOW(251)
00018c 2f24      	MOV  R18,R20
00018d 5011      	SUBI R17,LOW(1)
00018e c001      	RJMP _0x2000053
                 _0x2000052:
00018f e320      	LDI  R18,LOW(48)
                 _0x2000053:
000190 c001      	RJMP _0x2000054
                 _0x2000051:
000191 e220      	LDI  R18,LOW(32)
                 _0x2000054:
000192 d0bd      	RCALL SUBOPT_0x1
000193 5051      	SUBI R21,LOW(1)
000194 cff0      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
000195 2f31      	MOV  R19,R17
000196 ff01      	SBRS R16,1
000197 c016      	RJMP _0x2000055
                 _0x2000056:
000198 3030      	CPI  R19,0
000199 f099      	BREQ _0x2000058
00019a ff03      	SBRS R16,3
00019b c006      	RJMP _0x2000059
00019c 81ee      	LDD  R30,Y+6
00019d 81ff      	LDD  R31,Y+6+1
00019e 9125      	LPM  R18,Z+
00019f 83ee      	STD  Y+6,R30
0001a0 83ff      	STD  Y+6+1,R31
0001a1 c005      	RJMP _0x200005A
                 _0x2000059:
0001a2 81ae      	LDD  R26,Y+6
0001a3 81bf      	LDD  R27,Y+6+1
0001a4 912d      	LD   R18,X+
0001a5 83ae      	STD  Y+6,R26
0001a6 83bf      	STD  Y+6+1,R27
                 _0x200005A:
0001a7 d0a8      	RCALL SUBOPT_0x1
0001a8 3050      	CPI  R21,0
0001a9 f009      	BREQ _0x200005B
0001aa 5051      	SUBI R21,LOW(1)
                 _0x200005B:
0001ab 5031      	SUBI R19,LOW(1)
0001ac cfeb      	RJMP _0x2000056
                 _0x2000058:
0001ad c048      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0001ae e320      	LDI  R18,LOW(48)
0001af 81ee      	LDD  R30,Y+6
0001b0 81ff      	LDD  R31,Y+6+1
0001b1 d0cd      	RCALL __GETW1PF
0001b2 87e8      	STD  Y+8,R30
0001b3 87f9      	STD  Y+8+1,R31
0001b4 81ee      	LDD  R30,Y+6
0001b5 81ff      	LDD  R31,Y+6+1
0001b6 9632      	ADIW R30,2
0001b7 83ee      	STD  Y+6,R30
0001b8 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0001b9 85e8      	LDD  R30,Y+8
0001ba 85f9      	LDD  R31,Y+8+1
0001bb 85aa      	LDD  R26,Y+10
0001bc 85bb      	LDD  R27,Y+10+1
0001bd 17ae      	CP   R26,R30
0001be 07bf      	CPC  R27,R31
0001bf f050      	BRLO _0x2000062
0001c0 5f2f      	SUBI R18,-LOW(1)
0001c1 85a8      	LDD  R26,Y+8
0001c2 85b9      	LDD  R27,Y+8+1
0001c3 85ea      	LDD  R30,Y+10
0001c4 85fb      	LDD  R31,Y+10+1
0001c5 1bea      	SUB  R30,R26
0001c6 0bfb      	SBC  R31,R27
0001c7 87ea      	STD  Y+10,R30
0001c8 87fb      	STD  Y+10+1,R31
0001c9 cfef      	RJMP _0x2000060
                 _0x2000062:
0001ca 332a      	CPI  R18,58
0001cb f028      	BRLO _0x2000063
0001cc ff03      	SBRS R16,3
0001cd c002      	RJMP _0x2000064
0001ce 5f29      	SUBI R18,-LOW(7)
0001cf c001      	RJMP _0x2000065
                 _0x2000064:
0001d0 5d29      	SUBI R18,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0001d1 fd04      	SBRC R16,4
0001d2 c019      	RJMP _0x2000067
0001d3 3321      	CPI  R18,49
0001d4 f420      	BRSH _0x2000069
0001d5 85a8      	LDD  R26,Y+8
0001d6 85b9      	LDD  R27,Y+8+1
0001d7 9711      	SBIW R26,1
0001d8 f409      	BRNE _0x2000068
                 _0x2000069:
0001d9 c009      	RJMP _0x20000D3
                 _0x2000068:
0001da 1753      	CP   R21,R19
0001db f010      	BRLO _0x200006D
0001dc ff00      	SBRS R16,0
0001dd c001      	RJMP _0x200006E
                 _0x200006D:
0001de c011      	RJMP _0x200006C
                 _0x200006E:
0001df e220      	LDI  R18,LOW(32)
0001e0 ff07      	SBRS R16,7
0001e1 c00a      	RJMP _0x200006F
0001e2 e320      	LDI  R18,LOW(48)
                 _0x20000D3:
0001e3 6100      	ORI  R16,LOW(16)
0001e4 ff02      	SBRS R16,2
0001e5 c006      	RJMP _0x2000070
0001e6 7f0b      	ANDI R16,LOW(251)
0001e7 934a      	ST   -Y,R20
0001e8 d074      	RCALL SUBOPT_0x3
0001e9 3050      	CPI  R21,0
0001ea f009      	BREQ _0x2000071
0001eb 5051      	SUBI R21,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
0001ec d063      	RCALL SUBOPT_0x1
0001ed 3050      	CPI  R21,0
0001ee f009      	BREQ _0x2000072
0001ef 5051      	SUBI R21,LOW(1)
                 _0x2000072:
                 _0x200006C:
0001f0 5031      	SUBI R19,LOW(1)
0001f1 85a8      	LDD  R26,Y+8
0001f2 85b9      	LDD  R27,Y+8+1
0001f3 9712      	SBIW R26,2
0001f4 f008      	BRLO _0x200005F
0001f5 cfb8      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
0001f6 ff00      	SBRS R16,0
0001f7 c007      	RJMP _0x2000073
                 _0x2000074:
0001f8 3050      	CPI  R21,0
0001f9 f029      	BREQ _0x2000076
0001fa 5051      	SUBI R21,LOW(1)
0001fb e2e0      	LDI  R30,LOW(32)
0001fc 93ea      	ST   -Y,R30
0001fd d05f      	RCALL SUBOPT_0x3
0001fe cff9      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
0001ff e010      	LDI  R17,LOW(0)
                 _0x2000021:
000200 ceea      	RJMP _0x200001C
                 _0x200001E:
000201 85ac      	LDD  R26,Y+12
000202 85bd      	LDD  R27,Y+12+1
000203 91ed      	LD   R30,X+
000204 91fd      	LD   R31,X+
000205 d06e      	RCALL __LOADLOCR6
000206 9664      	ADIW R28,20
000207 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
000208 92ff      	PUSH R15
000209 2ef8      	MOV  R15,R24
00020a 9726      	SBIW R28,6
00020b 931a      	ST   -Y,R17
00020c 930a      	ST   -Y,R16
00020d 01de      	MOVW R26,R28
00020e 9614      	ADIW R26,4
                +
00020f 2400     +CLR R0
000210 0daf     +ADD R26 , R15
000211 1db0     +ADC R27 , R0
                 	__ADDW2R15
000212 018d      	MOVW R16,R26
000213 e0e0      	LDI  R30,LOW(0)
000214 83ec      	STD  Y+4,R30
000215 83ed      	STD  Y+4+1,R30
000216 83ee      	STD  Y+6,R30
000217 83ef      	STD  Y+6+1,R30
000218 01de      	MOVW R26,R28
000219 9618      	ADIW R26,8
                +
00021a 2400     +CLR R0
00021b 0daf     +ADD R26 , R15
00021c 1db0     +ADC R27 , R0
                 	__ADDW2R15
00021d 91ed      	LD   R30,X+
00021e 91fd      	LD   R31,X+
00021f 93fa      	ST   -Y,R31
000220 93ea      	ST   -Y,R30
000221 931a      	ST   -Y,R17
000222 930a      	ST   -Y,R16
000223 ede3      	LDI  R30,LOW(_put_usart_G100)
000224 e0f0      	LDI  R31,HIGH(_put_usart_G100)
000225 93fa      	ST   -Y,R31
000226 93ea      	ST   -Y,R30
000227 01de      	MOVW R26,R28
000228 9618      	ADIW R26,8
000229 deb6      	RCALL __print_G100
00022a 8119      	LDD  R17,Y+1
00022b 8108      	LDD  R16,Y+0
00022c 9628      	ADIW R28,8
00022d 90ff      	POP  R15
00022e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00022f 93ba      	ST   -Y,R27
000230 93aa      	ST   -Y,R26
000231 91a9          ld   r26,y+
000232 91b9          ld   r27,y+
000233 27ee          clr  r30
000234 27ff          clr  r31
                 strlen0:
000235 916d          ld   r22,x+
000236 2366          tst  r22
000237 f011          breq strlen1
000238 9631          adiw r30,1
000239 cffb          rjmp strlen0
                 strlen1:
00023a 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00023b 93ba      	ST   -Y,R27
00023c 93aa      	ST   -Y,R26
00023d 27aa          clr  r26
00023e 27bb          clr  r27
00023f 91e9          ld   r30,y+
000240 91f9          ld   r31,y+
                 strlenf0:
000241 9005      	lpm  r0,z+
000242 2000          tst  r0
000243 f011          breq strlenf1
000244 9611          adiw r26,1
000245 cffb          rjmp strlenf0
                 strlenf1:
000246 01fd          movw r30,r26
000247 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
000248 93fa      	ST   -Y,R31
000249 93ea      	ST   -Y,R30
00024a e080      	LDI  R24,0
00024b dfbc      	RCALL _printf
00024c 9622      	ADIW R28,2
00024d efa4      	LDI  R26,LOW(500)
00024e e0b1      	LDI  R27,HIGH(500)
00024f c033      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x1:
000250 932a      	ST   -Y,R18
000251 85ad      	LDD  R26,Y+13
000252 85be      	LDD  R27,Y+13+1
000253 85ef      	LDD  R30,Y+15
000254 89f8      	LDD  R31,Y+15+1
000255 9509      	ICALL
000256 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x2:
000257 89e8      	LDD  R30,Y+16
000258 89f9      	LDD  R31,Y+16+1
000259 9734      	SBIW R30,4
00025a 8be8      	STD  Y+16,R30
00025b 8bf9      	STD  Y+16+1,R31
00025c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
00025d 85ad      	LDD  R26,Y+13
00025e 85be      	LDD  R27,Y+13+1
00025f 85ef      	LDD  R30,Y+15
000260 89f8      	LDD  R31,Y+15+1
000261 9509      	ICALL
000262 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4:
000263 89a8      	LDD  R26,Y+16
000264 89b9      	LDD  R27,Y+16+1
000265 9614      	ADIW R26,4
000266 91ed      	LD   R30,X+
000267 91fd      	LD   R31,X+
000268 83ee      	STD  Y+6,R30
000269 83ff      	STD  Y+6+1,R31
00026a 81ae      	LDD  R26,Y+6
00026b 81bf      	LDD  R27,Y+6+1
00026c 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00026d 935a      	ST   -Y,R21
                 __SAVELOCR5:
00026e 934a      	ST   -Y,R20
                 __SAVELOCR4:
00026f 933a      	ST   -Y,R19
                 __SAVELOCR3:
000270 932a      	ST   -Y,R18
                 __SAVELOCR2:
000271 931a      	ST   -Y,R17
000272 930a      	ST   -Y,R16
000273 9508      	RET
                 
                 __LOADLOCR6:
000274 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000275 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000276 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000277 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000278 8119      	LDD  R17,Y+1
000279 8108      	LD   R16,Y
00027a 9508      	RET
                 
                 __ANEGW1:
00027b 95f1      	NEG  R31
00027c 95e1      	NEG  R30
00027d 40f0      	SBCI R31,0
00027e 9508      	RET
                 
                 __GETW1PF:
00027f 9005      	LPM  R0,Z+
000280 91f4      	LPM  R31,Z
000281 2de0      	MOV  R30,R0
000282 9508      	RET
                 
                 _delay_ms:
000283 9610      	adiw r26,0
000284 f039      	breq __delay_ms1
                 __delay_ms0:
000285 95a8      	wdr
                +
000286 ef8a     +LDI R24 , LOW ( 0xFA )
000287 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
000288 9701     +SBIW R24 , 1
000289 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
00028a 9711      	sbiw r26,1
00028b f7c9      	brne __delay_ms0
                 __delay_ms1:
00028c 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega168P register use summary:
r0 :   9 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  30 r17:  19 r18:  27 r19:   8 r20:   9 r21:  17 r22:   2 r23:   0 
r24:   8 r25:   2 r26:  53 r27:  28 r28:  11 r29:   1 r30: 154 r31:  48 
x  :  20 y  : 122 z  :   6 
Registers used: 20 out of 35 (57.1%)

ATmega168P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   3 
adiw  :  17 and   :   0 andi  :   5 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  13 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   0 brne  :  21 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   8 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   1 cpi   :  29 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  27 ld    :  21 ldd   :  57 ldi   :  64 
lds   :   1 lpm   :   7 lsl   :   0 lsr   :   0 mov   :  11 movw  :   5 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   6 out   :  20 pop   :   1 push  :   1 rcall :  26 ret   :  15 
reti  :   0 rjmp  :  52 rol   :   0 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :  10 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  35 std   :  30 sts   :  33 sub   :   1 subi  :  13 swap  :   0 
tst   :   3 wdr   :   1 
Instructions used: 45 out of 116 (38.8%)

ATmega168P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00051a   1262     44   1306   16384   8.0%
[.dseg] 0x000100 0x000200      0      0      0    1024   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 0 warnings
