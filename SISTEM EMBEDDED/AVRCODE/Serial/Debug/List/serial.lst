
AVRASM ver. 2.1.30  D:\KOSIM\UNLA\SISTEM EMBEDDED\AVRCODE\Serial\Debug\List\serial.asm Mon Nov 06 18:43:13 2023

D:\KOSIM\UNLA\SISTEM EMBEDDED\AVRCODE\Serial\Debug\List\serial.asm(1420): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.52 
                 ;(C) Copyright 1998-2023 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega168P
                 ;Program type           : Application
                 ;Clock frequency        : 1,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 1
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega168P
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU SPMCSR=0x37
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x04FF
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 	.EQU __EEPROM_PAGE_SIZE=0x04
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rxdata=R4
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0040 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000034 2710
000035 03e8
000036 0064
000037 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000038 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000039 1000
00003a 0100
00003b 0010
00003c 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
00003d 0043
00003e 0055
00003f 0044      	.DB  0x43,0x0,0x55,0x0,0x44,0x0
                 __RESET:
000040 94f8      	CLI
000041 27ee      	CLR  R30
000042 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000043 e0f1      	LDI  R31,1
000044 bff5      	OUT  MCUCR,R31
000045 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000046 e08d      	LDI  R24,(14-2)+1
000047 e0a2      	LDI  R26,2
000048 27bb      	CLR  R27
                 __CLEAR_REG:
000049 93ed      	ST   X+,R30
00004a 958a      	DEC  R24
00004b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004d e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004e e0a0      	LDI  R26,LOW(__SRAM_START)
00004f e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
000050 93ed      	ST   X+,R30
000051 9701      	SBIW R24,1
000052 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GPIOR0 INITIALIZATION
000053 e0e0      	LDI  R30,__GPIOR0_INIT
000054 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000055 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000056 bfed      	OUT  SPL,R30
000057 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000058 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000059 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00005a e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00005b 940c 005d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x200
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;void main(void)
                 ; 0000 0021 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0022 // Declare your local variables here
                 ; 0000 0023 
                 ; 0000 0024 // Crystal Oscillator division factor: 1
                 ; 0000 0025 #pragma optsize-
                 ; 0000 0026 CLKPR=(1<<CLKPCE);
00005d e8e0      	LDI  R30,LOW(128)
00005e 93e0 0061 	STS  97,R30
                 ; 0000 0027 CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
000060 e0e0      	LDI  R30,LOW(0)
000061 93e0 0061 	STS  97,R30
                 ; 0000 0028 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 0029 #pragma optsize+
                 ; 0000 002A #endif
                 ; 0000 002B 
                 ; 0000 002C // Input/Output Ports initialization
                 ; 0000 002D // Port B initialization
                 ; 0000 002E // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=Out
                 ; 0000 002F DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (1<<DDB0);
000063 e0e1      	LDI  R30,LOW(1)
000064 b9e4      	OUT  0x4,R30
                 ; 0000 0030 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=0
                 ; 0000 0031 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000065 e0e0      	LDI  R30,LOW(0)
000066 b9e5      	OUT  0x5,R30
                 ; 0000 0032 
                 ; 0000 0033 // Port C initialization
                 ; 0000 0034 // Function: Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0035 DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000067 b9e7      	OUT  0x7,R30
                 ; 0000 0036 // State: Bit6=T Bit5=P Bit4=P Bit3=P Bit2=T Bit1=T Bit0=T
                 ; 0000 0037 PORTC=(0<<PORTC6) | (1<<PORTC5) | (1<<PORTC4) | (1<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000068 e3e8      	LDI  R30,LOW(56)
000069 b9e8      	OUT  0x8,R30
                 ; 0000 0038 
                 ; 0000 0039 // Port D initialization
                 ; 0000 003A // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 003B DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
00006a e0e0      	LDI  R30,LOW(0)
00006b b9ea      	OUT  0xA,R30
                 ; 0000 003C // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 003D PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
00006c b9eb      	OUT  0xB,R30
                 ; 0000 003E 
                 ; 0000 003F // Timer/Counter 0 initialization
                 ; 0000 0040 // Clock source: System Clock
                 ; 0000 0041 // Clock value: Timer 0 Stopped
                 ; 0000 0042 // Mode: Normal top=0xFF
                 ; 0000 0043 // OC0A output: Disconnected
                 ; 0000 0044 // OC0B output: Disconnected
                 ; 0000 0045 TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
00006d bde4      	OUT  0x24,R30
                 ; 0000 0046 TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
00006e bde5      	OUT  0x25,R30
                 ; 0000 0047 TCNT0=0x00;
00006f bde6      	OUT  0x26,R30
                 ; 0000 0048 OCR0A=0x00;
000070 bde7      	OUT  0x27,R30
                 ; 0000 0049 OCR0B=0x00;
000071 bde8      	OUT  0x28,R30
                 ; 0000 004A 
                 ; 0000 004B // Timer/Counter 1 initialization
                 ; 0000 004C // Clock source: System Clock
                 ; 0000 004D // Clock value: Timer1 Stopped
                 ; 0000 004E // Mode: Normal top=0xFFFF
                 ; 0000 004F // OC1A output: Disconnected
                 ; 0000 0050 // OC1B output: Disconnected
                 ; 0000 0051 // Noise Canceler: Off
                 ; 0000 0052 // Input Capture on Falling Edge
                 ; 0000 0053 // Timer1 Overflow Interrupt: Off
                 ; 0000 0054 // Input Capture Interrupt: Off
                 ; 0000 0055 // Compare A Match Interrupt: Off
                 ; 0000 0056 // Compare B Match Interrupt: Off
                 ; 0000 0057 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000072 93e0 0080 	STS  128,R30
                 ; 0000 0058 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000074 93e0 0081 	STS  129,R30
                 ; 0000 0059 TCNT1H=0x00;
000076 93e0 0085 	STS  133,R30
                 ; 0000 005A TCNT1L=0x00;
000078 93e0 0084 	STS  132,R30
                 ; 0000 005B ICR1H=0x00;
00007a 93e0 0087 	STS  135,R30
                 ; 0000 005C ICR1L=0x00;
00007c 93e0 0086 	STS  134,R30
                 ; 0000 005D OCR1AH=0x00;
00007e 93e0 0089 	STS  137,R30
                 ; 0000 005E OCR1AL=0x00;
000080 93e0 0088 	STS  136,R30
                 ; 0000 005F OCR1BH=0x00;
000082 93e0 008b 	STS  139,R30
                 ; 0000 0060 OCR1BL=0x00;
000084 93e0 008a 	STS  138,R30
                 ; 0000 0061 
                 ; 0000 0062 // Timer/Counter 2 initialization
                 ; 0000 0063 // Clock source: System Clock
                 ; 0000 0064 // Clock value: Timer2 Stopped
                 ; 0000 0065 // Mode: Normal top=0xFF
                 ; 0000 0066 // OC2A output: Disconnected
                 ; 0000 0067 // OC2B output: Disconnected
                 ; 0000 0068 ASSR=(0<<EXCLK) | (0<<AS2);
000086 93e0 00b6 	STS  182,R30
                 ; 0000 0069 TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
000088 93e0 00b0 	STS  176,R30
                 ; 0000 006A TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);
00008a 93e0 00b1 	STS  177,R30
                 ; 0000 006B TCNT2=0x00;
00008c 93e0 00b2 	STS  178,R30
                 ; 0000 006C OCR2A=0x00;
00008e 93e0 00b3 	STS  179,R30
                 ; 0000 006D OCR2B=0x00;
000090 93e0 00b4 	STS  180,R30
                 ; 0000 006E 
                 ; 0000 006F // Timer/Counter 0 Interrupt(s) initialization
                 ; 0000 0070 TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
000092 93e0 006e 	STS  110,R30
                 ; 0000 0071 
                 ; 0000 0072 // Timer/Counter 1 Interrupt(s) initialization
                 ; 0000 0073 TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
000094 93e0 006f 	STS  111,R30
                 ; 0000 0074 
                 ; 0000 0075 // Timer/Counter 2 Interrupt(s) initialization
                 ; 0000 0076 TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
000096 93e0 0070 	STS  112,R30
                 ; 0000 0077 
                 ; 0000 0078 // External Interrupt(s) initialization
                 ; 0000 0079 // INT0: Off
                 ; 0000 007A // INT1: Off
                 ; 0000 007B // Interrupt on any change on pins PCINT0-7: Off
                 ; 0000 007C // Interrupt on any change on pins PCINT8-14: Off
                 ; 0000 007D // Interrupt on any change on pins PCINT16-23: Off
                 ; 0000 007E EICRA=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
000098 93e0 0069 	STS  105,R30
                 ; 0000 007F EIMSK=(0<<INT1) | (0<<INT0);
00009a bbed      	OUT  0x1D,R30
                 ; 0000 0080 PCICR=(0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
00009b 93e0 0068 	STS  104,R30
                 ; 0000 0081 
                 ; 0000 0082 // USART initialization
                 ; 0000 0083 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0084 // USART Receiver: On
                 ; 0000 0085 // USART Transmitter: On
                 ; 0000 0086 // USART0 Mode: Asynchronous
                 ; 0000 0087 // USART Baud Rate: 4800
                 ; 0000 0088 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
00009d 93e0 00c0 	STS  192,R30
                 ; 0000 0089 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
00009f e1e8      	LDI  R30,LOW(24)
0000a0 93e0 00c1 	STS  193,R30
                 ; 0000 008A UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
0000a2 e0e6      	LDI  R30,LOW(6)
0000a3 93e0 00c2 	STS  194,R30
                 ; 0000 008B UBRR0H=0x00;
0000a5 e0e0      	LDI  R30,LOW(0)
0000a6 93e0 00c5 	STS  197,R30
                 ; 0000 008C UBRR0L=0x0C;
0000a8 e0ec      	LDI  R30,LOW(12)
0000a9 93e0 00c4 	STS  196,R30
                 ; 0000 008D 
                 ; 0000 008E // Analog Comparator initialization
                 ; 0000 008F // Analog Comparator: Off
                 ; 0000 0090 // The Analog Comparator's positive input is
                 ; 0000 0091 // connected to the AIN0 pin
                 ; 0000 0092 // The Analog Comparator's negative input is
                 ; 0000 0093 // connected to the AIN1 pin
                 ; 0000 0094 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000ab e8e0      	LDI  R30,LOW(128)
0000ac bfe0      	OUT  0x30,R30
                 ; 0000 0095 ADCSRB=(0<<ACME);
0000ad e0e0      	LDI  R30,LOW(0)
0000ae 93e0 007b 	STS  123,R30
                 ; 0000 0096 // Digital input buffer on AIN0: On
                 ; 0000 0097 // Digital input buffer on AIN1: On
                 ; 0000 0098 DIDR1=(0<<AIN0D) | (0<<AIN1D);
0000b0 93e0 007f 	STS  127,R30
                 ; 0000 0099 
                 ; 0000 009A // ADC initialization
                 ; 0000 009B // ADC disabled
                 ; 0000 009C ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0000b2 93e0 007a 	STS  122,R30
                 ; 0000 009D 
                 ; 0000 009E // SPI initialization
                 ; 0000 009F // SPI disabled
                 ; 0000 00A0 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000b4 bdec      	OUT  0x2C,R30
                 ; 0000 00A1 
                 ; 0000 00A2 // TWI initialization
                 ; 0000 00A3 // TWI disabled
                 ; 0000 00A4 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000b5 93e0 00bc 	STS  188,R30
                 ; 0000 00A5 
                 ; 0000 00A6 while (1)
                 _0x3:
                 ; 0000 00A7 {
                 ; 0000 00A8 // Place your code here
                 ; 0000 00A9 if (PINC.3 == 0)
0000b7 9933      	SBIC 0x6,3
0000b8 c00a      	RJMP _0x6
                 ; 0000 00AA {
                 ; 0000 00AB delay_ms(10);
0000b9 e0aa      	LDI  R26,LOW(10)
0000ba e0b0      	LDI  R27,0
0000bb d1e8      	RCALL _delay_ms
                 ; 0000 00AC if (PINC.3 == 0)
0000bc 9933      	SBIC 0x6,3
0000bd c003      	RJMP _0x7
                 ; 0000 00AD {
                 ; 0000 00AE printf("C");
                +
0000be e7ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000bf e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000c0 d1aa      	RCALL SUBOPT_0x0
                 ; 0000 00AF }
                 ; 0000 00B0 while (PINC.3 == 0)
                 _0x7:
                 _0x8:
0000c1 9b33      	SBIS 0x6,3
                 ; 0000 00B1 {
                 ; 0000 00B2 }
0000c2 cffe      	RJMP _0x8
                 ; 0000 00B3 }
                 ; 0000 00B4 
                 ; 0000 00B5 if (PINC.4 == 0)
                 _0x6:
0000c3 9934      	SBIC 0x6,4
0000c4 c00a      	RJMP _0xB
                 ; 0000 00B6 {
                 ; 0000 00B7 delay_ms(10);
0000c5 e0aa      	LDI  R26,LOW(10)
0000c6 e0b0      	LDI  R27,0
0000c7 d1dc      	RCALL _delay_ms
                 ; 0000 00B8 if (PINC.4 == 0)
0000c8 9934      	SBIC 0x6,4
0000c9 c003      	RJMP _0xC
                 ; 0000 00B9 {
                 ; 0000 00BA printf("U");
                +
0000ca e7ec     +LDI R30 , LOW ( 2 * _0x0 + ( 2 ) )
0000cb e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 2 ) )
                 	__POINTW1FN _0x0,2
0000cc d19e      	RCALL SUBOPT_0x0
                 ; 0000 00BB }
                 ; 0000 00BC while (PINC.4 == 0)
                 _0xC:
                 _0xD:
0000cd 9b34      	SBIS 0x6,4
                 ; 0000 00BD {
                 ; 0000 00BE }
0000ce cffe      	RJMP _0xD
                 ; 0000 00BF }
                 ; 0000 00C0 
                 ; 0000 00C1 if (PINC.5 == 0)
                 _0xB:
0000cf 9935      	SBIC 0x6,5
0000d0 c00a      	RJMP _0x10
                 ; 0000 00C2 {
                 ; 0000 00C3 delay_ms(10);
0000d1 e0aa      	LDI  R26,LOW(10)
0000d2 e0b0      	LDI  R27,0
0000d3 d1d0      	RCALL _delay_ms
                 ; 0000 00C4 if (PINC.5 == 0)
0000d4 9935      	SBIC 0x6,5
0000d5 c003      	RJMP _0x11
                 ; 0000 00C5 {
                 ; 0000 00C6 printf("D");
                +
0000d6 e7ee     +LDI R30 , LOW ( 2 * _0x0 + ( 4 ) )
0000d7 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 4 ) )
                 	__POINTW1FN _0x0,4
0000d8 d192      	RCALL SUBOPT_0x0
                 ; 0000 00C7 }
                 ; 0000 00C8 while (PINC.5 == 0)
                 _0x11:
                 _0x12:
0000d9 9b35      	SBIS 0x6,5
                 ; 0000 00C9 {
                 ; 0000 00CA }
0000da cffe      	RJMP _0x12
                 ; 0000 00CB }
                 ; 0000 00CC 
                 ; 0000 00CD if (UCSR0A & 0x80)
                 _0x10:
0000db 91e0 00c0 	LDS  R30,192
0000dd 78e0      	ANDI R30,LOW(0x80)
0000de f059      	BREQ _0x15
                 ; 0000 00CE {
                 ; 0000 00CF rxdata = UDR0;
0000df 9040 00c6 	LDS  R4,198
                 ; 0000 00D0 if (rxdata =='1')
0000e1 e3e1      	LDI  R30,LOW(49)
0000e2 15e4      	CP   R30,R4
0000e3 f411      	BRNE _0x16
                 ; 0000 00D1 {
                 ; 0000 00D2 PORTB.0=1;
0000e4 9a28      	SBI  0x5,0
                 ; 0000 00D3 }
                 ; 0000 00D4 else if (rxdata=='0')
0000e5 c004      	RJMP _0x19
                 _0x16:
0000e6 e3e0      	LDI  R30,LOW(48)
0000e7 15e4      	CP   R30,R4
0000e8 f409      	BRNE _0x1A
                 ; 0000 00D5 {
                 ; 0000 00D6 PORTB.0=0;
0000e9 9828      	CBI  0x5,0
                 ; 0000 00D7 }
                 ; 0000 00D8 }
                 _0x1A:
                 _0x19:
                 ; 0000 00D9 
                 ; 0000 00DA 
                 ; 0000 00DB }
                 _0x15:
0000ea cfcc      	RJMP _0x3
                 ; 0000 00DC }
                 _0x1D:
0000eb cfff      	RJMP _0x1D
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0000ec 93aa      	ST   -Y,R26
                 _0x2000006:
0000ed 91e0 00c0 	LDS  R30,192
0000ef 72e0      	ANDI R30,LOW(0x20)
0000f0 f3e1      	BREQ _0x2000006
0000f1 81e8      	LD   R30,Y
0000f2 93e0 00c6 	STS  198,R30
0000f4 9621      	ADIW R28,1
0000f5 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0000f6 93ba      	ST   -Y,R27
0000f7 93aa      	ST   -Y,R26
0000f8 81aa      	LDD  R26,Y+2
0000f9 dff2      	RCALL _putchar
0000fa 81a8      	LD   R26,Y
0000fb 81b9      	LDD  R27,Y+1
0000fc 91ed      	LD   R30,X+
0000fd 91fd      	LD   R31,X+
0000fe 9631      	ADIW R30,1
0000ff 93fe      	ST   -X,R31
000100 93ee      	ST   -X,R30
000101 9623      	ADIW R28,3
000102 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000103 93ba      	ST   -Y,R27
000104 93aa      	ST   -Y,R26
000105 9726      	SBIW R28,6
000106 d187      	RCALL __SAVELOCR6
000107 e010      	LDI  R17,0
000108 85ac      	LDD  R26,Y+12
000109 85bd      	LDD  R27,Y+12+1
00010a e0e0      	LDI  R30,LOW(0)
00010b e0f0      	LDI  R31,HIGH(0)
00010c 93ed      	ST   X+,R30
00010d 93fc      	ST   X,R31
                 _0x200001C:
00010e 89ea      	LDD  R30,Y+18
00010f 89fb      	LDD  R31,Y+18+1
000110 9631      	ADIW R30,1
000111 8bea      	STD  Y+18,R30
000112 8bfb      	STD  Y+18+1,R31
000113 9731      	SBIW R30,1
000114 91e4      	LPM  R30,Z
000115 2f2e      	MOV  R18,R30
000116 30e0      	CPI  R30,0
000117 f409      	BRNE PC+2
000118 c10b      	RJMP _0x200001E
000119 2fe1      	MOV  R30,R17
00011a 30e0      	CPI  R30,0
00011b f431      	BRNE _0x2000022
00011c 3225      	CPI  R18,37
00011d f411      	BRNE _0x2000023
00011e e011      	LDI  R17,LOW(1)
00011f c001      	RJMP _0x2000024
                 _0x2000023:
000120 d150      	RCALL SUBOPT_0x1
                 _0x2000024:
000121 c101      	RJMP _0x2000021
                 _0x2000022:
000122 30e1      	CPI  R30,LOW(0x1)
000123 f4a1      	BRNE _0x2000025
000124 3225      	CPI  R18,37
000125 f411      	BRNE _0x2000026
000126 d14a      	RCALL SUBOPT_0x1
000127 c0fa      	RJMP _0x20000D2
                 _0x2000026:
000128 e012      	LDI  R17,LOW(2)
000129 e040      	LDI  R20,LOW(0)
00012a e000      	LDI  R16,LOW(0)
00012b 322d      	CPI  R18,45
00012c f411      	BRNE _0x2000027
00012d e001      	LDI  R16,LOW(1)
00012e c0f4      	RJMP _0x2000021
                 _0x2000027:
00012f 322b      	CPI  R18,43
000130 f411      	BRNE _0x2000028
000131 e24b      	LDI  R20,LOW(43)
000132 c0f0      	RJMP _0x2000021
                 _0x2000028:
000133 3220      	CPI  R18,32
000134 f411      	BRNE _0x2000029
000135 e240      	LDI  R20,LOW(32)
000136 c0ec      	RJMP _0x2000021
                 _0x2000029:
000137 c002      	RJMP _0x200002A
                 _0x2000025:
000138 30e2      	CPI  R30,LOW(0x2)
000139 f439      	BRNE _0x200002B
                 _0x200002A:
00013a e050      	LDI  R21,LOW(0)
00013b e013      	LDI  R17,LOW(3)
00013c 3320      	CPI  R18,48
00013d f411      	BRNE _0x200002C
00013e 6800      	ORI  R16,LOW(128)
00013f c0e3      	RJMP _0x2000021
                 _0x200002C:
000140 c003      	RJMP _0x200002D
                 _0x200002B:
000141 30e3      	CPI  R30,LOW(0x3)
000142 f009      	BREQ PC+2
000143 c0df      	RJMP _0x2000021
                 _0x200002D:
000144 3320      	CPI  R18,48
000145 f010      	BRLO _0x2000030
000146 332a      	CPI  R18,58
000147 f008      	BRLO _0x2000031
                 _0x2000030:
000148 c007      	RJMP _0x200002F
                 _0x2000031:
000149 e0aa      	LDI  R26,LOW(10)
00014a 9f5a      	MUL  R21,R26
00014b 2d50      	MOV  R21,R0
00014c 2fe2      	MOV  R30,R18
00014d 53e0      	SUBI R30,LOW(48)
00014e 0f5e      	ADD  R21,R30
00014f c0d3      	RJMP _0x2000021
                 _0x200002F:
000150 2fe2      	MOV  R30,R18
000151 36e3      	CPI  R30,LOW(0x63)
000152 f439      	BRNE _0x2000035
000153 d124      	RCALL SUBOPT_0x2
000154 89e8      	LDD  R30,Y+16
000155 89f9      	LDD  R31,Y+16+1
000156 81a4      	LDD  R26,Z+4
000157 93aa      	ST   -Y,R26
000158 d125      	RCALL SUBOPT_0x3
000159 c0c8      	RJMP _0x2000036
                 _0x2000035:
00015a 37e3      	CPI  R30,LOW(0x73)
00015b f429      	BRNE _0x2000038
00015c d11b      	RCALL SUBOPT_0x2
00015d d126      	RCALL SUBOPT_0x4
00015e d0f3      	RCALL _strlen
00015f 2f1e      	MOV  R17,R30
000160 c007      	RJMP _0x2000039
                 _0x2000038:
000161 37e0      	CPI  R30,LOW(0x70)
000162 f449      	BRNE _0x200003B
000163 d114      	RCALL SUBOPT_0x2
000164 d11f      	RCALL SUBOPT_0x4
000165 d0f8      	RCALL _strlenf
000166 2f1e      	MOV  R17,R30
000167 6008      	ORI  R16,LOW(8)
                 _0x2000039:
000168 6002      	ORI  R16,LOW(2)
000169 770f      	ANDI R16,LOW(127)
00016a e030      	LDI  R19,LOW(0)
00016b c03a      	RJMP _0x200003C
                 _0x200003B:
00016c 36e4      	CPI  R30,LOW(0x64)
00016d f011      	BREQ _0x200003F
00016e 36e9      	CPI  R30,LOW(0x69)
00016f f411      	BRNE _0x2000040
                 _0x200003F:
000170 6004      	ORI  R16,LOW(4)
000171 c002      	RJMP _0x2000041
                 _0x2000040:
000172 37e5      	CPI  R30,LOW(0x75)
000173 f431      	BRNE _0x2000042
                 _0x2000041:
000174 e6e8      	LDI  R30,LOW(_tbl10_G100*2)
000175 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000176 83ee      	STD  Y+6,R30
000177 83ff      	STD  Y+6+1,R31
000178 e015      	LDI  R17,LOW(5)
000179 c00c      	RJMP _0x2000043
                 _0x2000042:
00017a 35e8      	CPI  R30,LOW(0x58)
00017b f411      	BRNE _0x2000045
00017c 6008      	ORI  R16,LOW(8)
00017d c003      	RJMP _0x2000046
                 _0x2000045:
00017e 37e8      	CPI  R30,LOW(0x78)
00017f f009      	BREQ PC+2
000180 c0a1      	RJMP _0x2000077
                 _0x2000046:
000181 e7e2      	LDI  R30,LOW(_tbl16_G100*2)
000182 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000183 83ee      	STD  Y+6,R30
000184 83ff      	STD  Y+6+1,R31
000185 e014      	LDI  R17,LOW(4)
                 _0x2000043:
000186 ff02      	SBRS R16,2
000187 c015      	RJMP _0x2000048
000188 d0ef      	RCALL SUBOPT_0x2
000189 89a8      	LDD  R26,Y+16
00018a 89b9      	LDD  R27,Y+16+1
00018b 9614      	ADIW R26,4
00018c 91ed      	LD   R30,X+
00018d 91fd      	LD   R31,X+
00018e 87ea      	STD  Y+10,R30
00018f 87fb      	STD  Y+10+1,R31
000190 85ab      	LDD  R26,Y+11
000191 23aa      	TST  R26
000192 f422      	BRPL _0x2000049
000193 d108      	RCALL __ANEGW1
000194 87ea      	STD  Y+10,R30
000195 87fb      	STD  Y+10+1,R31
000196 e24d      	LDI  R20,LOW(45)
                 _0x2000049:
000197 3040      	CPI  R20,0
000198 f011      	BREQ _0x200004A
000199 5f1f      	SUBI R17,-LOW(1)
00019a c001      	RJMP _0x200004B
                 _0x200004A:
00019b 7f0b      	ANDI R16,LOW(251)
                 _0x200004B:
00019c c009      	RJMP _0x200004C
                 _0x2000048:
00019d d0da      	RCALL SUBOPT_0x2
00019e 89a8      	LDD  R26,Y+16
00019f 89b9      	LDD  R27,Y+16+1
0001a0 9614      	ADIW R26,4
                +
0001a1 91ed     +LD R30 , X +
0001a2 91fc     +LD R31 , X
0001a3 9711     +SBIW R26 , 1
                 	__GETW1P
0001a4 87ea      	STD  Y+10,R30
0001a5 87fb      	STD  Y+10+1,R31
                 _0x200004C:
                 _0x200003C:
0001a6 fd00      	SBRC R16,0
0001a7 c010      	RJMP _0x200004D
                 _0x200004E:
0001a8 1715      	CP   R17,R21
0001a9 f470      	BRSH _0x2000050
0001aa ff07      	SBRS R16,7
0001ab c008      	RJMP _0x2000051
0001ac ff02      	SBRS R16,2
0001ad c004      	RJMP _0x2000052
0001ae 7f0b      	ANDI R16,LOW(251)
0001af 2f24      	MOV  R18,R20
0001b0 5011      	SUBI R17,LOW(1)
0001b1 c001      	RJMP _0x2000053
                 _0x2000052:
0001b2 e320      	LDI  R18,LOW(48)
                 _0x2000053:
0001b3 c001      	RJMP _0x2000054
                 _0x2000051:
0001b4 e220      	LDI  R18,LOW(32)
                 _0x2000054:
0001b5 d0bb      	RCALL SUBOPT_0x1
0001b6 5051      	SUBI R21,LOW(1)
0001b7 cff0      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
0001b8 2f31      	MOV  R19,R17
0001b9 ff01      	SBRS R16,1
0001ba c016      	RJMP _0x2000055
                 _0x2000056:
0001bb 3030      	CPI  R19,0
0001bc f099      	BREQ _0x2000058
0001bd ff03      	SBRS R16,3
0001be c006      	RJMP _0x2000059
0001bf 81ee      	LDD  R30,Y+6
0001c0 81ff      	LDD  R31,Y+6+1
0001c1 9125      	LPM  R18,Z+
0001c2 83ee      	STD  Y+6,R30
0001c3 83ff      	STD  Y+6+1,R31
0001c4 c005      	RJMP _0x200005A
                 _0x2000059:
0001c5 81ae      	LDD  R26,Y+6
0001c6 81bf      	LDD  R27,Y+6+1
0001c7 912d      	LD   R18,X+
0001c8 83ae      	STD  Y+6,R26
0001c9 83bf      	STD  Y+6+1,R27
                 _0x200005A:
0001ca d0a6      	RCALL SUBOPT_0x1
0001cb 3050      	CPI  R21,0
0001cc f009      	BREQ _0x200005B
0001cd 5051      	SUBI R21,LOW(1)
                 _0x200005B:
0001ce 5031      	SUBI R19,LOW(1)
0001cf cfeb      	RJMP _0x2000056
                 _0x2000058:
0001d0 c048      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0001d1 e320      	LDI  R18,LOW(48)
0001d2 81ee      	LDD  R30,Y+6
0001d3 81ff      	LDD  R31,Y+6+1
0001d4 d0cb      	RCALL __GETW1PF
0001d5 87e8      	STD  Y+8,R30
0001d6 87f9      	STD  Y+8+1,R31
0001d7 81ee      	LDD  R30,Y+6
0001d8 81ff      	LDD  R31,Y+6+1
0001d9 9632      	ADIW R30,2
0001da 83ee      	STD  Y+6,R30
0001db 83ff      	STD  Y+6+1,R31
                 _0x2000060:
0001dc 85e8      	LDD  R30,Y+8
0001dd 85f9      	LDD  R31,Y+8+1
0001de 85aa      	LDD  R26,Y+10
0001df 85bb      	LDD  R27,Y+10+1
0001e0 17ae      	CP   R26,R30
0001e1 07bf      	CPC  R27,R31
0001e2 f050      	BRLO _0x2000062
0001e3 5f2f      	SUBI R18,-LOW(1)
0001e4 85a8      	LDD  R26,Y+8
0001e5 85b9      	LDD  R27,Y+8+1
0001e6 85ea      	LDD  R30,Y+10
0001e7 85fb      	LDD  R31,Y+10+1
0001e8 1bea      	SUB  R30,R26
0001e9 0bfb      	SBC  R31,R27
0001ea 87ea      	STD  Y+10,R30
0001eb 87fb      	STD  Y+10+1,R31
0001ec cfef      	RJMP _0x2000060
                 _0x2000062:
0001ed 332a      	CPI  R18,58
0001ee f028      	BRLO _0x2000063
0001ef ff03      	SBRS R16,3
0001f0 c002      	RJMP _0x2000064
0001f1 5f29      	SUBI R18,-LOW(7)
0001f2 c001      	RJMP _0x2000065
                 _0x2000064:
0001f3 5d29      	SUBI R18,-LOW(39)
                 _0x2000065:
                 _0x2000063:
0001f4 fd04      	SBRC R16,4
0001f5 c019      	RJMP _0x2000067
0001f6 3321      	CPI  R18,49
0001f7 f420      	BRSH _0x2000069
0001f8 85a8      	LDD  R26,Y+8
0001f9 85b9      	LDD  R27,Y+8+1
0001fa 9711      	SBIW R26,1
0001fb f409      	BRNE _0x2000068
                 _0x2000069:
0001fc c009      	RJMP _0x20000D3
                 _0x2000068:
0001fd 1753      	CP   R21,R19
0001fe f010      	BRLO _0x200006D
0001ff ff00      	SBRS R16,0
000200 c001      	RJMP _0x200006E
                 _0x200006D:
000201 c011      	RJMP _0x200006C
                 _0x200006E:
000202 e220      	LDI  R18,LOW(32)
000203 ff07      	SBRS R16,7
000204 c00a      	RJMP _0x200006F
000205 e320      	LDI  R18,LOW(48)
                 _0x20000D3:
000206 6100      	ORI  R16,LOW(16)
000207 ff02      	SBRS R16,2
000208 c006      	RJMP _0x2000070
000209 7f0b      	ANDI R16,LOW(251)
00020a 934a      	ST   -Y,R20
00020b d072      	RCALL SUBOPT_0x3
00020c 3050      	CPI  R21,0
00020d f009      	BREQ _0x2000071
00020e 5051      	SUBI R21,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
00020f d061      	RCALL SUBOPT_0x1
000210 3050      	CPI  R21,0
000211 f009      	BREQ _0x2000072
000212 5051      	SUBI R21,LOW(1)
                 _0x2000072:
                 _0x200006C:
000213 5031      	SUBI R19,LOW(1)
000214 85a8      	LDD  R26,Y+8
000215 85b9      	LDD  R27,Y+8+1
000216 9712      	SBIW R26,2
000217 f008      	BRLO _0x200005F
000218 cfb8      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
000219 ff00      	SBRS R16,0
00021a c007      	RJMP _0x2000073
                 _0x2000074:
00021b 3050      	CPI  R21,0
00021c f029      	BREQ _0x2000076
00021d 5051      	SUBI R21,LOW(1)
00021e e2e0      	LDI  R30,LOW(32)
00021f 93ea      	ST   -Y,R30
000220 d05d      	RCALL SUBOPT_0x3
000221 cff9      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
000222 e010      	LDI  R17,LOW(0)
                 _0x2000021:
000223 ceea      	RJMP _0x200001C
                 _0x200001E:
000224 85ac      	LDD  R26,Y+12
000225 85bd      	LDD  R27,Y+12+1
000226 91ed      	LD   R30,X+
000227 91fd      	LD   R31,X+
000228 d06c      	RCALL __LOADLOCR6
000229 9664      	ADIW R28,20
00022a 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
00022b 92ff      	PUSH R15
00022c 2ef8      	MOV  R15,R24
00022d 9726      	SBIW R28,6
00022e 931a      	ST   -Y,R17
00022f 930a      	ST   -Y,R16
000230 01de      	MOVW R26,R28
000231 9614      	ADIW R26,4
                +
000232 2400     +CLR R0
000233 0daf     +ADD R26 , R15
000234 1db0     +ADC R27 , R0
                 	__ADDW2R15
000235 018d      	MOVW R16,R26
000236 e0e0      	LDI  R30,LOW(0)
000237 83ec      	STD  Y+4,R30
000238 83ed      	STD  Y+4+1,R30
000239 83ee      	STD  Y+6,R30
00023a 83ef      	STD  Y+6+1,R30
00023b 01de      	MOVW R26,R28
00023c 9618      	ADIW R26,8
                +
00023d 2400     +CLR R0
00023e 0daf     +ADD R26 , R15
00023f 1db0     +ADC R27 , R0
                 	__ADDW2R15
000240 91ed      	LD   R30,X+
000241 91fd      	LD   R31,X+
000242 93fa      	ST   -Y,R31
000243 93ea      	ST   -Y,R30
000244 931a      	ST   -Y,R17
000245 930a      	ST   -Y,R16
000246 efe6      	LDI  R30,LOW(_put_usart_G100)
000247 e0f0      	LDI  R31,HIGH(_put_usart_G100)
000248 93fa      	ST   -Y,R31
000249 93ea      	ST   -Y,R30
00024a 01de      	MOVW R26,R28
00024b 9618      	ADIW R26,8
00024c deb6      	RCALL __print_G100
00024d 8119      	LDD  R17,Y+1
00024e 8108      	LDD  R16,Y+0
00024f 9628      	ADIW R28,8
000250 90ff      	POP  R15
000251 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000252 93ba      	ST   -Y,R27
000253 93aa      	ST   -Y,R26
000254 91a9          ld   r26,y+
000255 91b9          ld   r27,y+
000256 27ee          clr  r30
000257 27ff          clr  r31
                 strlen0:
000258 916d          ld   r22,x+
000259 2366          tst  r22
00025a f011          breq strlen1
00025b 9631          adiw r30,1
00025c cffb          rjmp strlen0
                 strlen1:
00025d 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00025e 93ba      	ST   -Y,R27
00025f 93aa      	ST   -Y,R26
000260 27aa          clr  r26
000261 27bb          clr  r27
000262 91e9          ld   r30,y+
000263 91f9          ld   r31,y+
                 strlenf0:
000264 9005      	lpm  r0,z+
000265 2000          tst  r0
000266 f011          breq strlenf1
000267 9611          adiw r26,1
000268 cffb          rjmp strlenf0
                 strlenf1:
000269 01fd          movw r30,r26
00026a 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x0:
00026b 93fa      	ST   -Y,R31
00026c 93ea      	ST   -Y,R30
00026d e080      	LDI  R24,0
00026e dfbc      	RCALL _printf
00026f 9622      	ADIW R28,2
000270 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x1:
000271 932a      	ST   -Y,R18
000272 85ad      	LDD  R26,Y+13
000273 85be      	LDD  R27,Y+13+1
000274 85ef      	LDD  R30,Y+15
000275 89f8      	LDD  R31,Y+15+1
000276 9509      	ICALL
000277 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x2:
000278 89e8      	LDD  R30,Y+16
000279 89f9      	LDD  R31,Y+16+1
00027a 9734      	SBIW R30,4
00027b 8be8      	STD  Y+16,R30
00027c 8bf9      	STD  Y+16+1,R31
00027d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
00027e 85ad      	LDD  R26,Y+13
00027f 85be      	LDD  R27,Y+13+1
000280 85ef      	LDD  R30,Y+15
000281 89f8      	LDD  R31,Y+15+1
000282 9509      	ICALL
000283 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4:
000284 89a8      	LDD  R26,Y+16
000285 89b9      	LDD  R27,Y+16+1
000286 9614      	ADIW R26,4
000287 91ed      	LD   R30,X+
000288 91fd      	LD   R31,X+
000289 83ee      	STD  Y+6,R30
00028a 83ff      	STD  Y+6+1,R31
00028b 81ae      	LDD  R26,Y+6
00028c 81bf      	LDD  R27,Y+6+1
00028d 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00028e 935a      	ST   -Y,R21
                 __SAVELOCR5:
00028f 934a      	ST   -Y,R20
                 __SAVELOCR4:
000290 933a      	ST   -Y,R19
                 __SAVELOCR3:
000291 932a      	ST   -Y,R18
                 __SAVELOCR2:
000292 931a      	ST   -Y,R17
000293 930a      	ST   -Y,R16
000294 9508      	RET
                 
                 __LOADLOCR6:
000295 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000296 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000297 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000298 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000299 8119      	LDD  R17,Y+1
00029a 8108      	LD   R16,Y
00029b 9508      	RET
                 
                 __ANEGW1:
00029c 95f1      	NEG  R31
00029d 95e1      	NEG  R30
00029e 40f0      	SBCI R31,0
00029f 9508      	RET
                 
                 __GETW1PF:
0002a0 9005      	LPM  R0,Z+
0002a1 91f4      	LPM  R31,Z
0002a2 2de0      	MOV  R30,R0
0002a3 9508      	RET
                 
                 _delay_ms:
0002a4 9610      	adiw r26,0
0002a5 f039      	breq __delay_ms1
                 __delay_ms0:
0002a6 95a8      	wdr
                +
0002a7 ef8a     +LDI R24 , LOW ( 0xFA )
0002a8 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0002a9 9701     +SBIW R24 , 1
0002aa f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0002ab 9711      	sbiw r26,1
0002ac f7c9      	brne __delay_ms0
                 __delay_ms1:
0002ad 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega168P register use summary:
r0 :   9 r1 :   0 r2 :   0 r3 :   0 r4 :   3 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  30 r17:  19 r18:  27 r19:   8 r20:   9 r21:  17 r22:   2 r23:   0 
r24:   8 r25:   2 r26:  55 r27:  30 r28:  11 r29:   1 r30: 161 r31:  49 
x  :  20 y  : 122 z  :   6 
Registers used: 21 out of 35 (60.0%)

ATmega168P instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   3 
adiw  :  17 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  14 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   0 brne  :  23 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   1 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   8 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   5 cpc   :   1 cpi   :  29 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  27 ld    :  21 ldd   :  57 ldi   :  72 
lds   :   3 lpm   :   7 lsl   :   0 lsr   :   0 mov   :  11 movw  :   5 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   6 out   :  20 pop   :   1 push  :   1 rcall :  30 ret   :  16 
reti  :   0 rjmp  :  61 rol   :   0 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :   1 sbic  :   6 sbis  :   3 sbiw  :  10 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  35 std   :  30 sts   :  33 sub   :   1 subi  :  13 swap  :   0 
tst   :   3 wdr   :   1 
Instructions used: 49 out of 116 (42.2%)

ATmega168P memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00055c   1348     24   1372   16384   8.4%
[.dseg] 0x000100 0x000200      0      0      0    1024   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 1 warnings
